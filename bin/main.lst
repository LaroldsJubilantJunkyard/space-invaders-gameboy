                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _UpdateGameOverScreen
                                     13 	.globl _SetupGameOverScreen
                                     14 	.globl _UpdateNextLevelScreen
                                     15 	.globl _SetupNextLevelScreen
                                     16 	.globl _UpdateGameplayScreen
                                     17 	.globl _SetupGameplayScreen
                                     18 	.globl _UpdateMenuScreen
                                     19 	.globl _SetupMenuScreen
                                     20 	.globl _UpdateStartScreen
                                     21 	.globl _SetupStartScreen
                                     22 	.globl _GameFirstLoad
                                     23 	.globl _wait_vbl_done
                                     24 	.globl _joypad
                                     25 ;--------------------------------------------------------
                                     26 ; special function registers
                                     27 ;--------------------------------------------------------
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DATA
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _INITIALIZED
                                     36 ;--------------------------------------------------------
                                     37 ; absolute external ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _DABS (ABS)
                                     40 ;--------------------------------------------------------
                                     41 ; global & static initialisations
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _GSINIT
                                     45 	.area _GSFINAL
                                     46 	.area _GSINIT
                                     47 ;--------------------------------------------------------
                                     48 ; Home
                                     49 ;--------------------------------------------------------
                                     50 	.area _HOME
                                     51 	.area _HOME
                                     52 ;--------------------------------------------------------
                                     53 ; code
                                     54 ;--------------------------------------------------------
                                     55 	.area _CODE
                                     56 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:12: void main(void){
                                     57 ;	---------------------------------
                                     58 ; Function main
                                     59 ; ---------------------------------
      000000                         60 _main::
                                     61 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:14: GameFirstLoad();
      000000 CDr00r00                62 	call	_GameFirstLoad
                                     63 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:16: UINT8 currentGameState = GAMEFIRSTLOAD;
                                     64 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:17: UINT8 nextGameState = GAMEPLAYSCREEN;
      000003 01 00 03                65 	ld	bc, #0x300
                                     66 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:19: while(1){
      000006                         67 00132$:
                                     68 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:21: joypadPrevious=joypadCurrent;
      000006 FAr00r00                69 	ld	a, (#_joypadCurrent)
      000009 EAr00r00                70 	ld	(#_joypadPrevious),a
                                     71 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:22: joypadCurrent=joypad();
      00000C CDr00r00                72 	call	_joypad
      00000F 21r00r00                73 	ld	hl, #_joypadCurrent
      000012 73                      74 	ld	(hl), e
                                     75 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:24: if(nextGameState!=currentGameState){
      000013 79                      76 	ld	a, c
      000014 90                      77 	sub	a, b
      000015 28 3A                   78 	jr	Z, 00116$
                                     79 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:26: currentGameState=nextGameState;
      000017 48                      80 	ld	c, b
                                     81 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:28: if(currentGameState==STARTSCREEN)SetupStartScreen();
      000018 78                      82 	ld	a, b
      000019 3D                      83 	dec	a
      00001A 20 07                   84 	jr	NZ, 00113$
      00001C C5                      85 	push	bc
      00001D CDr00r00                86 	call	_SetupStartScreen
      000020 C1                      87 	pop	bc
      000021 18 2E                   88 	jr	00116$
      000023                         89 00113$:
                                     90 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:29: else if(currentGameState==MENUSCREEN)SetupMenuScreen();
      000023 78                      91 	ld	a, b
      000024 D6 02                   92 	sub	a, #0x02
      000026 20 07                   93 	jr	NZ, 00110$
      000028 C5                      94 	push	bc
      000029 CDr00r00                95 	call	_SetupMenuScreen
      00002C C1                      96 	pop	bc
      00002D 18 22                   97 	jr	00116$
      00002F                         98 00110$:
                                     99 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:30: else if(currentGameState==GAMEPLAYSCREEN)SetupGameplayScreen();
      00002F 78                     100 	ld	a, b
      000030 D6 03                  101 	sub	a, #0x03
      000032 20 07                  102 	jr	NZ, 00107$
      000034 C5                     103 	push	bc
      000035 CDr00r00               104 	call	_SetupGameplayScreen
      000038 C1                     105 	pop	bc
      000039 18 16                  106 	jr	00116$
      00003B                        107 00107$:
                                    108 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:31: else if(currentGameState==GAMEOVERSCREEN)SetupGameOverScreen();
      00003B 78                     109 	ld	a, b
      00003C D6 05                  110 	sub	a, #0x05
      00003E 20 07                  111 	jr	NZ, 00104$
      000040 C5                     112 	push	bc
      000041 CDr00r00               113 	call	_SetupGameOverScreen
      000044 C1                     114 	pop	bc
      000045 18 0A                  115 	jr	00116$
      000047                        116 00104$:
                                    117 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:32: else if(currentGameState==NEXTLEVELSCREEN)SetupNextLevelScreen();
      000047 78                     118 	ld	a, b
      000048 D6 04                  119 	sub	a, #0x04
      00004A 20 05                  120 	jr	NZ, 00116$
      00004C C5                     121 	push	bc
      00004D CDr00r00               122 	call	_SetupNextLevelScreen
      000050 C1                     123 	pop	bc
      000051                        124 00116$:
                                    125 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:36: if(currentGameState==STARTSCREEN)nextGameState=UpdateStartScreen();
      000051 79                     126 	ld	a, c
      000052 3D                     127 	dec	a
      000053 20 08                  128 	jr	NZ, 00129$
      000055 C5                     129 	push	bc
      000056 CDr00r00               130 	call	_UpdateStartScreen
      000059 C1                     131 	pop	bc
      00005A 43                     132 	ld	b, e
      00005B 18 32                  133 	jr	00130$
      00005D                        134 00129$:
                                    135 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:37: else if(currentGameState==MENUSCREEN)nextGameState=UpdateMenuScreen();
      00005D 79                     136 	ld	a, c
      00005E D6 02                  137 	sub	a, #0x02
      000060 20 08                  138 	jr	NZ, 00126$
      000062 C5                     139 	push	bc
      000063 CDr00r00               140 	call	_UpdateMenuScreen
      000066 C1                     141 	pop	bc
      000067 43                     142 	ld	b, e
      000068 18 25                  143 	jr	00130$
      00006A                        144 00126$:
                                    145 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:38: else if(currentGameState==GAMEPLAYSCREEN)nextGameState=UpdateGameplayScreen();
      00006A 79                     146 	ld	a, c
      00006B D6 03                  147 	sub	a, #0x03
      00006D 20 08                  148 	jr	NZ, 00123$
      00006F C5                     149 	push	bc
      000070 CDr00r00               150 	call	_UpdateGameplayScreen
      000073 C1                     151 	pop	bc
      000074 43                     152 	ld	b, e
      000075 18 18                  153 	jr	00130$
      000077                        154 00123$:
                                    155 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:39: else if(currentGameState==GAMEOVERSCREEN)nextGameState=UpdateGameOverScreen();
      000077 79                     156 	ld	a, c
      000078 D6 05                  157 	sub	a, #0x05
      00007A 20 08                  158 	jr	NZ, 00120$
      00007C C5                     159 	push	bc
      00007D CDr00r00               160 	call	_UpdateGameOverScreen
      000080 C1                     161 	pop	bc
      000081 43                     162 	ld	b, e
      000082 18 0B                  163 	jr	00130$
      000084                        164 00120$:
                                    165 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:40: else if(currentGameState==NEXTLEVELSCREEN)nextGameState=UpdateNextLevelScreen();
      000084 79                     166 	ld	a, c
      000085 D6 04                  167 	sub	a, #0x04
      000087 20 06                  168 	jr	NZ, 00130$
      000089 C5                     169 	push	bc
      00008A CDr00r00               170 	call	_UpdateNextLevelScreen
      00008D C1                     171 	pop	bc
      00008E 43                     172 	ld	b, e
      00008F                        173 00130$:
                                    174 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:43: wait_vbl_done();
      00008F CDr00r00               175 	call	_wait_vbl_done
                                    176 ;D:\Business\LaroldsJubilantJunkyard\game-remakes\space-invaders\source\main\default\main.c:47: }
      000092 C3r06r00               177 	jp	00132$
                                    178 	.area _CODE
                                    179 	.area _INITIALIZER
                                    180 	.area _CABS (ABS)
